generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccountCategory {
  AKTIVA // 1
  PASIVA // 2
  PENJUALAN // 4
  BEBAN_DAN_BIAYA // Missing Kelompok 5
}

enum AccountSubCategory {
  AKTIVA_LANCAR // 10
  AKTIVA_TETAP // 13
  AKTIVA_LAINNYA // 14
  HUTANG // 20
  MODAL // 30
  PENJUALAN //? 4 Missing General 40
  HARGA_POKOK_PENJUALAN // 50
  BEBAN_TETAP // 51
  BIAYA_TIDAK_TETAP //52
  PENDAPATAN_DAN_BIAYA_LAINNYA // 53
  TAKSIRAN_PAJAK // 54
}

enum AccountType {
  GENERAL
  DETAIL
}

enum LedgerType {
  KAS
  KAS_MASUK
  KAS_KELUAR
}

enum PostingStatus {
  PENDING
  POSTED
}

enum ReportType {
  NERACA
  LABA_RUGI
}

enum Role {
  NASABAH
  KASIR
  KOLEKTOR
  MANAJER
  ADMIN
  AKUNTAN
}

enum TransactionType {
  DEBIT
  KREDIT
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

model User {
  id          String     @id
  username    String     @unique
  password    String
  name        String
  role        Role       @default(NASABAH)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime
  status      UserStatus @default(ACTIVE)
  createdBy   String
  forceLogout Boolean    @default(false)

  @@map("users")
}

model AccountGeneral {
  id                       String          @id
  accountNumber            String          @unique
  accountName              String
  accountType              AccountType     @default(GENERAL)
  createdAt                DateTime        @default(now())
  updatedAt                DateTime
  createdBy                String
  updatedBy                String
  accountCategory          AccountCategory
  accountSubCategory          AccountSubCategory
  initialAmountCredit      Decimal         @default(0) @db.Decimal(10, 2)
  initialAmountDebit       Decimal         @default(0) @db.Decimal(10, 2)
  accumulationAmountCredit Decimal         @default(0) @db.Decimal(10, 2)
  accumulationAmountDebit  Decimal         @default(0) @db.Decimal(10, 2)
  amountCredit             Decimal         @default(0) @db.Decimal(10, 2)
  amountDebit              Decimal         @default(0) @db.Decimal(10, 2)
  deletedAt                DateTime?
  reportType               ReportType
  transactionType          TransactionType
  accountsDetail           AccountDetail[]
  ledgers                  Ledger[]

  @@map("accounts_general")
}

model AccountDetail {
  id                          String          @id
  accountNumber               String          @unique
  accountName                 String
  accountType                 AccountType     @default(DETAIL)
  accountCategory          AccountCategory
  createdAt                   DateTime        @default(now())
  updatedAt                   DateTime
  createdBy                   String
  updatedBy                   String
  accountGeneralAccountNumber String
  initialAmountCredit         Decimal         @default(0) @db.Decimal(10, 2)
  initialAmountDebit          Decimal         @default(0) @db.Decimal(10, 2)
  accumulationAmountCredit    Decimal         @default(0) @db.Decimal(10, 2)
  accumulationAmountDebit     Decimal         @default(0) @db.Decimal(10, 2)
  amountCredit                Decimal         @default(0) @db.Decimal(10, 2)
  amountDebit                 Decimal         @default(0) @db.Decimal(10, 2)
  deletedAt                   DateTime?
  reportType                  ReportType
  transactionType             TransactionType
  accountGeneral              AccountGeneral  @relation(fields: [accountGeneralAccountNumber], references: [accountNumber])
  ledgers                     Ledger[]

  @@map("accounts_detail")
}

model Ledger {
  id                          String          @id
  referenceNumber             String
  amount                      Decimal         @db.Decimal(10, 2)
  description                 String
  createdAt                   DateTime        @default(now())
  updatedAt                   DateTime
  createdBy                   String
  updatedBy                   String
  accountDetailAccountNumber  String
  ledgerType                  LedgerType
  transactionType             TransactionType
  postingStatus               PostingStatus   @default(PENDING)
  postingAt                   DateTime?
  accountGeneralAccountNumber String
  deletedAt                   DateTime?
  ledgerDate                  DateTime
  accountDetail               AccountDetail   @relation(fields: [accountDetailAccountNumber], references: [accountNumber])
  accountGeneral              AccountGeneral  @relation(fields: [accountGeneralAccountNumber], references: [accountNumber])

  @@map("ledgers")
}

model JournalLedger {
  id                          String        @id
  accountDetailAccountNumber  String
  accountGeneralAccountNumber String
  debit                       Decimal       @default(0) @db.Decimal(10, 2)
  credit                      Decimal       @default(0) @db.Decimal(10, 2)
  amountDebit                 Decimal       @default(0) @db.Decimal(10, 2)
  amountCredit                Decimal       @default(0) @db.Decimal(10, 2)
  ledgerDate                  DateTime
  postingStatus               PostingStatus @default(PENDING)
  postingAt                   DateTime?
  createdAt                   DateTime      @default(now())
  createdBy                   String

  @@map("journal_ledgers")
}

model SisaHasilUsaha {
  id                          String   @id
  year                        String
  amount                      Decimal  @db.Decimal(10, 2)
  accountDetailAccountNumber  String
  accountGeneralAccountNumber String
  accountingClose             Boolean  @default(false)
  createdAt                   DateTime @default(now())
  updatedAt                   DateTime

  @@map("sisa_hasil_usaha")
}
